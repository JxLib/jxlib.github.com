{"common":{"deps":["Class","Element","Browser","Element.Style","Request","Core","Class.Extras","Class.Binds","Array","Element.Event","Element.Dimensions","Element.Measure","Lang"],"desc":"Jx namespace with methods and classes common to most Jx widgets","css":["license","reset","common"],"images":["a_pixel.png"],"fname":"Base\/common.js"},"styles":{"deps":["common"],"desc":"A singleton object useful for dynamically creating and manipulating CSS styles","css":[],"images":[],"fname":"Base\/styles.js"},"object":{"deps":["common","Class.Extras"],"desc":"Base class for all other object in the JxLib framework.","css":[],"images":[],"fname":"Base\/object.js"},"locale.english":{"deps":["Lang"],"desc":"Default translations of text strings used in JX for US english (en-US)","css":[],"images":[],"fname":"locales\/locale.english.js"},"widget":{"deps":["object","Selectors","locale.english"],"opt":["Spinner"],"desc":"Base class for all widgets (visual classes) in the JxLib Framework.","css":["chrome"],"images":["spinner_16.gif","spinner_24.gif"],"fname":"Base\/widget.js"},"selection":{"deps":["object"],"desc":"A class to manage selection across multiple list objects","css":[],"images":[],"fname":"Base\/selection.js"},"list":{"deps":["object","selection"],"desc":"A class that is used to manage lists of DOM elements","css":[],"images":[],"fname":"Base\/list.js"},"stack":{"deps":["common"],"desc":"A singleton object for managing a global z-index stack for widgets that need to order themselves in the z-index of the page relative to other such widgets.","css":[],"images":[],"fname":"Base\/stack.js"},"locale.german":{"deps":["Lang"],"desc":"Default translations of text strings used in JX for German (Germany) (de-DE)","css":[],"images":[],"fname":"locales\/locale.german.js"},"locale.russian":{"deps":["Lang"],"desc":"Default translations of text strings used in JX for Russia (Russia) (ru-RU)","css":[],"images":[],"fname":"locales\/locale.russian.js"},"record":{"deps":["object"],"desc":"The basic record implementation. A store uses records to handle and manipulate data.","css":[],"images":[],"fname":"Data\/record.js"},"store":{"deps":["object","record"],"desc":"An implementation of a basic data store.","css":[],"images":[],"fname":"Data\/store.js"},"compare":{"deps":["object","Date.Extras"],"desc":"Class that provides functions for comparing various data types. Used by the Jx.Sort class and it's descendants","css":[],"images":[],"fname":"Data\/compare.js"},"sort":{"deps":["object","compare"],"desc":"Base class for the sort algorithm implementations","css":[],"images":[],"fname":"Data\/sort.js"},"mergesort":{"deps":["sort"],"desc":"An implementation of the merge sort algorithm","css":[],"images":[],"fname":"Data\/mergesort.js"},"heapsort":{"deps":["sort"],"desc":"An implementation of the heap sort algorithm","css":[],"images":[],"fname":"Data\/heapsort.js"},"quicksort":{"deps":["sort"],"desc":"An implementation of the quick sort algorithm","css":[],"images":[],"fname":"Data\/quicksort.js"},"nativesort":{"deps":["sort"],"desc":"An implementation of the Javascript native sorting with the Jx.Sort interface","css":[],"images":[],"fname":"Data\/nativesort.js"},"response":{"deps":["store"],"desc":"The object used to return response information to strategies.","css":[],"images":[],"fname":"Data\/response.js"},"protocol":{"deps":["response","store"],"desc":"Base class for all store protocols.","css":[],"images":[],"fname":"Data\/protocol.js"},"protocol.local":{"deps":["protocol"],"desc":"Store protocol used to load data that is already present in a page as an object.","css":[],"images":[],"fname":"Data\/protocol.local.js"},"protocol.ajax":{"deps":["protocol","Request.Queue"],"desc":"Store protocol used to load data from a remote data source via Ajax.","css":[],"images":[],"fname":"Data\/protocol.ajax.js"},"strategy":{"deps":["store"],"desc":"Base class for all store strategies.","css":[],"images":[],"fname":"Data\/strategy.js"},"strategy.full":{"deps":["strategy"],"desc":"Strategy for loading the full data set from a source.","css":[],"images":[],"fname":"Data\/strategy.full.js"},"strategy.paginate":{"deps":["strategy"],"desc":"Strategy for loading data in pages and moving between them. This strategy makes sure the store only contains the current page's data.","css":[],"images":[],"fname":"Data\/strategy.paginate.js"},"strategy.progressive":{"deps":["strategy.paginate"],"desc":"Strategy based on Strategy.Paginate but loads data progressively without removing old or curent data from the store.","css":[],"images":[],"fname":"Data\/strategy.progressive.js"},"strategy.save":{"deps":["strategy"],"desc":"Strategy used for saving data back to a source. Can be called manually or setup to automatically save on every change.","css":[],"images":[],"fname":"Data\/strategy.save.js"},"strategy.sort":{"deps":["strategy","sort","compare"],"desc":"Strategy used for sorting results in a store after they are loaded.","css":[],"images":[],"fname":"Data\/strategy.sort.js"},"parser":{"deps":["store"],"desc":"Base class for all data parsers. Parsers are used by protocols to get data received or sent in the proper formats.","css":[],"images":[],"fname":"Data\/parser.js"},"parser.json":{"deps":["parser","JSON"],"desc":"Parser for reading and writting JSON formatted data.","css":[],"images":[],"fname":"Data\/parser.json.js"},"button":{"deps":["widget"],"opt":["Drag"],"desc":"Jx.Button creates a clickable element that can be added to a web page.","css":["button"],"images":["button.png"],"fname":"Button\/button.js"},"flyout":{"deps":["button"],"desc":"Flyout buttons expose a panel when the user clicks the button.","css":[],"images":["flyout_chrome.png","emblems.png"],"fname":"Button\/flyout.js"},"colorpalette":{"deps":["widget"],"desc":"A Jx.ColorPalette presents a user interface for selecting colors.  This is typically combined with a Jx.Button.Color which embeds the color palette in a flyout.","css":["color"],"images":["grid.png"],"fname":"Extras\/colorpalette.js"},"color":{"deps":["flyout","colorpalette"],"desc":"A Jx.ColorPalette wrapped up in a Jx.Button.","css":[],"images":[],"fname":"Button\/color.js"},"menu":{"deps":["button","list","stack"],"desc":"A main menu as opposed to a sub menu that lives inside the menu.","css":["menu"],"images":["flyout_chrome.png","emblems.png"],"fname":"Menu\/menu.js"},"menu.item":{"deps":["button","menu"],"desc":"A menu item is a single entry in a menu.","css":[],"images":["menuitem.png"],"fname":"Menu\/menu.item.js"},"set":{"deps":["object"],"desc":"A ButtonSet manages a set of Jx.Button instances by ensuring that only one of the buttons is active.","css":[],"images":[],"fname":"Button\/set.js"},"multi":{"deps":["button","menu.item","set"],"desc":"Multi buttons are used to contain multiple buttons in a drop down list where only one button is actually visible and clickable in the interface.","css":[],"images":["button_multi.png","button_multi_disclose.png"],"fname":"Button\/multi.js"},"layout":{"deps":["common","object"],"desc":"Jx.Layout is used to provide more flexible layout options for applications","css":["layout"],"images":[],"fname":"Layout\/layout.js"},"toolbar":{"deps":["widget","list"],"desc":"A toolbar is a container object that contains other objects such as buttons.","css":["toolbar"],"images":["toolbar.png"],"fname":"Toolbar\/toolbar.js"},"container":{"deps":["toolbar","button"],"opt":["Fx.Tween"],"desc":"A toolbar container contains toolbars.  This has an optional dependency on Fx.Tween that, if included, will allow toolbars that contain more elements than can be displayed to be smoothly scrolled left and right.  Without this optional dependency, the toolbar will jump in fixed increments rather than smoothly scrolling.","css":[],"images":["emblems.png"],"fname":"Toolbar\/container.js"},"toolbar.item":{"deps":["toolbar"],"desc":"A helper class to provide a container for something to go into a Jx.Toolbar.","css":[],"images":[],"fname":"Toolbar\/toolbar.item.js"},"panel":{"deps":["widget","menu.item","layout","container","toolbar.item"],"desc":"A panel is a fundamental container object that has a content area and optional toolbars around the content area.","css":["panel"],"images":["panel_controls.png","panelbar.png"],"fname":"Panel\/panel.js"},"dialog":{"deps":["panel"],"opt":["Drag"],"desc":"A Jx.Dialog that implements a floating dialog.","css":["dialog"],"images":["dialog_chrome.png","dialog_resize.png"],"fname":"Panel\/dialog.js"},"splitter":{"deps":["layout"],"opt":["Drag"],"desc":"A Jx.Splitter creates two or more containers within a parent container and provides user control over the size of the containers.","css":["splitter"],"images":[],"fname":"Layout\/splitter.js"},"panelset":{"deps":["splitter","panel"],"desc":"A panel set manages a set of panels within a DOM element.","css":[],"images":[],"fname":"Panel\/panelset.js"},"message":{"deps":["dialog","button","toolbar.item"],"desc":"A subclass of jx.Dialog for displaying messages w\/a single OK button.","css":["message"],"images":[],"fname":"Panel\/message.js"},"confirm":{"deps":["dialog","button","toolbar.item"],"desc":"A subclass of Jx.dialog for asking a yes\/no type question of the user. ","css":["confirm"],"images":[],"fname":"Panel\/confirm.js"},"tooltip":{"deps":["widget"],"desc":"These are very simple tooltips that are designed to be instantiated in javascript and directly attached to the object that they are the tip for.","css":["tooltip"],"images":[],"fname":"Extras\/tooltip.js"},"fieldset":{"deps":["widget"],"desc":"Used to create fieldsets in Forms","css":[],"images":[],"fname":"Form\/fieldset.js"},"form":{"deps":["widget","String.QueryString","Form.Validator"],"desc":"Represents a HTML Form","css":["form"],"images":[],"fname":"Form\/form.js"},"field":{"deps":["widget","tooltip","fieldset","form"],"desc":"Base class for all inputs","css":[],"images":[],"fname":"Form\/field.js"},"text":{"deps":["field"],"opt":["OverText"],"desc":"Represents a text input","css":[],"images":[],"fname":"Form\/text.js"},"prompt":{"deps":["dialog","button","toolbar.item","text"],"desc":"A subclass of Jx.dialog for prompting the user for text input. ","css":[],"images":[],"fname":"Panel\/prompt.js"},"dataview":{"deps":["panel","store","list"],"desc":"A panel used for displaying records from a store in a list-style interface rather than a grid.","css":[],"images":[],"fname":"Panel\/dataview.js"},"group":{"deps":["dataview","selection"],"desc":"A subclass of Dataview that can display records in groups.","css":[],"images":[],"fname":"Panel\/group.js"},"listitem":{"deps":["widget"],"desc":"Reresents a single item in a listview.","css":[],"images":[],"fname":"Panel\/listitem.js"},"listview":{"deps":["list","listitem"],"desc":"A widget that displays items in a list format.","css":["list"],"images":["listitem.png"],"fname":"Panel\/listview.js"},"hidden":{"deps":["field"],"desc":"Represents a hidden input","css":[],"images":[],"fname":"Form\/hidden.js"},"file":{"deps":["field","text","button","Request.JSON","hidden","form"],"desc":"Represents a file input w\/upload and progress tracking capabilities (requires APC for progress)","css":["file"],"images":[],"fname":"Form\/file.js"},"progressbar":{"deps":["widget","Fx.Tween"],"desc":"A css-based progress bar.","css":["progressbar"],"images":["progressbar.png"],"fname":"Extras\/progressbar.js"},"upload":{"deps":["panel","listview","file","progressbar","button","toolbar.item","tooltip"],"desc":"A panel subclass that is designed to be a multiple file upload panel with a queue listing.","css":["upload"],"images":["icons.png"],"fname":"Panel\/upload.js"},"column":{"deps":["widget"],"desc":"A representation of a single grid column","css":[],"images":[],"fname":"Grid\/column.js"},"columns":{"deps":["object","column"],"desc":"A container for defining and holding individual columns","css":[],"images":[],"fname":"Grid\/columns.js"},"row":{"deps":["object"],"desc":"Holds information related to display of rows in the grid.","css":[],"images":[],"fname":"Grid\/row.js"},"plugin":{"deps":["object"],"desc":"Base class for all plugins","css":[],"images":[],"fname":"Plugins\/plugin.js"},"plugin.grid":{"deps":["plugin"],"desc":"Namespace for grid plugins","css":[],"images":[],"fname":"Plugins\/plugin.grid.js"},"grid":{"deps":["widget","styles","layout","columns","row","plugin.grid","store","list","selection"],"desc":"A tabular control that has fixed scrolling headers on the rows and columns like a spreadsheet.","css":["grid"],"images":["table_col.png","table_row.png"],"fname":"Grid\/grid.js"},"renderer":{"deps":["grid"],"desc":"Base class for all renderers. Used to create the contents of column.","css":[],"images":[],"fname":"Grid\/renderer.js"},"renderer.text":{"deps":["renderer"],"desc":"Renders data as straight text.","css":[],"images":[],"fname":"Grid\/renderer.text.js"},"renderer.checkbox":{"deps":["renderer"],"desc":"Renders a checkbox in a column. Can be connected to a store column or as a standalone check column.","css":[],"images":[],"fname":"Grid\/renderer.checkbox.js"},"renderer.button":{"deps":["renderer"],"desc":"Renders one or more buttons in a single column.","css":[],"images":[],"fname":"Grid\/renderer.button.js"},"grid.selector":{"deps":["plugin.grid"],"desc":"Allows selecting rows, columns, and cells in grids","css":[],"images":[],"fname":"Plugins\/grid.selector.js"},"grid.prelighter":{"deps":["plugin.grid"],"desc":"Highlights rows, columns, cells, and headers in grids","css":[],"images":[],"fname":"Plugins\/grid.prelighter.js"},"grid.sorter":{"deps":["plugin.grid"],"desc":"Enables column sorting in grids","css":[],"images":["emblems.png"],"fname":"Plugins\/grid.sorter.js"},"grid.resize":{"deps":["plugin.grid"],"desc":"Enables column resizing in grids","css":[],"images":[],"fname":"Plugins\/grid.resize.js"},"grid.editor":{"deps":["plugin.grid","Keyboard"],"desc":"Enables inline editing in grids","css":[],"images":["icons.png"],"fname":"Plugins\/grid.editor.js"},"plugin.dataview":{"deps":["plugin"],"desc":"Namespace for DataView plugins","css":[],"images":[],"fname":"Plugins\/plugin.dataview.js"},"slide":{"deps":["object","Fx.Tween"],"desc":"A class that shows and hides elements using a slide effect. Does not use a wrapper element or require a fixed width or height.","css":[],"images":[],"fname":"Extras\/slide.js"},"dataview.groupfolder":{"deps":["plugin.dataview","slide"],"desc":"Enables closing and opening groups in a group dataview","css":[],"images":[],"fname":"Plugins\/dataview.groupfolder.js"},"plugin.field":{"deps":["plugin"],"desc":"Namespace for Jx.Field plugins","css":[],"images":[],"fname":"Plugins\/plugin.field.js"},"field.validator":{"deps":["plugin.field","Form.Validator","Form.Validator.Extras"],"desc":"Provides validation services for Jx.Field subclasses","css":[],"images":[],"fname":"Plugins\/field.validator.js"},"plugin.form":{"deps":["plugin"],"desc":"Namespace for Jx.Form plugins","css":[],"images":[],"fname":"Plugins\/plugin.form.js"},"form.validator":{"deps":["plugin.form","field.validator"],"desc":"Provides validation services for Jx.Form","css":[],"images":[],"fname":"Plugins\/form.validator.js"},"plugin.toolbarContainer":{"deps":["plugin"],"desc":"Namespace for Jx.Toolbar.Container","css":[],"images":[],"fname":"Plugins\/plugin.toolbarContainer.js"},"toolbarContainer.tabMenu":{"deps":["plugin.toolbarContainer"],"desc":"Adds a menu of tabs to the toolbar container for easy access to all tabs.","css":[],"images":[],"fname":"Plugins\/toolbarContainer.tabMenu.js"},"adaptor":{"deps":["plugin"],"desc":"Base class for all Adaptors.","css":[],"images":[],"fname":"Adaptors\/adaptor.js"},"adaptor.tree":{"deps":["adaptor"],"desc":"Base class for all adaptors that fill Jx.Tree widgets. Also acts as the namespace for other Jx.Tree adaptors.","css":[],"images":[],"fname":"Adaptors\/adaptor.tree.js"},"tree.mptt":{"deps":["adaptor.tree"],"desc":"Fills a Jx.Tree instance from a remote table that represents an MPTT (Modified Preorder Table Traversal) data source.","css":[],"images":[],"fname":"Adaptors\/tree.mptt.js"},"tree.parent":{"deps":["adaptor.tree"],"desc":"Fills a Jx.Tree instance from a standard parent\/child\/folder style data table.","css":[],"images":[],"fname":"Adaptors\/tree.parent.js"},"adaptor.combo":{"deps":["adaptor"],"desc":"Namespace for all Jx.Combo adaptors.","css":[],"images":[],"fname":"Adaptors\/adaptor.combo.js"},"combo.fill":{"deps":["adaptor.combo"],"desc":"Loads data into a Jx.Combo instance from designated column(s) of a data source.","css":[],"images":[],"fname":"Adaptors\/combo.fill.js"},"context":{"deps":["menu"],"desc":"A Jx.Menu that has no button but can be opened at a specific browser location to implement context menus (for instance).","css":["menu"],"images":[],"fname":"Menu\/context.js"},"menu.separator":{"deps":["menu"],"desc":"Convenience class to create a visual separator in a menu.","css":[],"images":["toolbar_separator_v.png"],"fname":"Menu\/menu.separator.js"},"submenu":{"deps":["menu.item","menu"],"desc":"A sub menu contains menu items within a main menu or another sub menu.","css":[],"images":[],"fname":"Menu\/submenu.js"},"snap":{"deps":["common","splitter"],"desc":"A helper class to create an element that can snap a split panel open or closed.","css":[],"images":[],"fname":"Layout\/snap.js"},"tab":{"deps":["button","layout"],"desc":"A single tab in a tab set.","css":["tab"],"images":["tab_top.png","tab_bottom.png","tab_left.png","tab_right.png","tab_close.png"],"fname":"Tab\/tab.js"},"tabset":{"deps":["tab"],"desc":"A TabSet manages a set of Jx.Tab content areas by ensuring that only one of the content areas is visible (i.e. the active tab). ","css":[],"images":[],"fname":"Tab\/tabset.js"},"tabbox":{"deps":["toolbar","panel","tabset"],"desc":"A convenience class to handle the common case of a single toolbar directly attached to the content area of the tabs.","css":[],"images":["tabbar.png","tabbar_bottom.png","tabbar_left.png","tabbar_right.png"],"fname":"Tab\/tabbox.js"},"toolbar.separator":{"deps":["toolbar"],"desc":"A helper class that represents a visual separator in a Jx.Toolbar.","css":[],"images":["toolbar_separator_h.png","toolbar_separator_v.png"],"fname":"Toolbar\/toolbar.separator.js"},"tree":{"deps":["widget","list"],"desc":"Jx.Tree displays hierarchical data in a tree structure of folders and nodes.","css":["tree"],"images":["tree.png","tree_vert_line.png"],"fname":"Tree\/tree.js"},"treeitem":{"deps":["widget"],"opt":["Drag"],"desc":"An item in a tree.","css":[],"images":["tree_hover.png"],"fname":"Tree\/treeitem.js"},"treefolder":{"deps":["treeitem","tree"],"desc":"A Jx.TreeFolder is an item in a tree that can contain other items. It is expandable and collapsible.","css":[],"images":[],"fname":"Tree\/treefolder.js"},"slider":{"deps":["widget","Slider"],"desc":"A wrapper for mootools' slider class to make it more Jx Friendly.","css":["slider"],"images":[],"fname":"Extras\/slider.js"},"notice":{"deps":["listitem"],"desc":"Represents a single item used in a notifier.","css":[],"images":["notice.png","notice_error.png","notice_warning.png","notice_success.png","icons.png"],"fname":"Extras\/notice.js"},"notifier":{"deps":["listview","Fx.Tween","notice"],"desc":"Base class for notification areas that can hold temporary notices.","css":["notification"],"images":[],"fname":"Extras\/notifier.js"},"notifier.float":{"deps":["notifier"],"desc":"A notification area that floats in a container above other content.","css":[],"images":[],"fname":"Extras\/notifier.float.js"},"scrollbar":{"deps":["slider"],"desc":"An implementation of a custom CSS-styled scrollbar.","css":["scrollbar"],"images":[],"fname":"Extras\/scrollbar.js"},"formatter":{"deps":["object"],"desc":"Base formatter object","css":[],"images":[],"fname":"Formatter\/formatter.js"},"number":{"deps":["formatter"],"desc":"Formats numbers including negative and floats","css":[],"images":[],"fname":"Formatter\/number.js"},"currency":{"deps":["number"],"desc":"Formats input as currency. Currently only US currency is supported","css":[],"images":[],"fname":"Formatter\/currency.js"},"date":{"deps":["Date.Extras","formatter"],"desc":"Formats dates using the mootools-more Date extensions","css":[],"images":[],"fname":"Formatter\/date.js"},"uri":{"deps":["String.Extras","formatter","uri"],"desc":"Formats uris using the mootools-more URI extensions","css":[],"images":[],"fname":"Formatter\/uri.js"},"boolean":{"deps":["formatter"],"desc":"Formats boolean input","css":[],"images":[],"fname":"Formatter\/boolean.js"},"phone":{"deps":["formatter"],"desc":"Formats phone numbers in US format including area code","css":[],"images":[],"fname":"Formatter\/phone.js"},"formatter.text":{"deps":["formatter"],"desc":"Formats strings to an optional maximum length","css":[],"images":[],"fname":"Formatter\/formatter.text.js"},"checkbox":{"deps":["field"],"desc":"Represents a checkbox input","css":[],"images":[],"fname":"Form\/checkbox.js"},"radio":{"deps":["field"],"desc":"Represents a radio button input","css":[],"images":[],"fname":"Form\/radio.js"},"select":{"deps":["field"],"desc":"Represents a select, or drop down, input","css":[],"images":[],"fname":"Form\/select.js"},"textarea":{"deps":["field"],"desc":"Represents a textarea input","css":[],"images":[],"fname":"Form\/textarea.js"},"jxbutton":{"deps":["field","button"],"desc":"Represents a button input","css":[],"images":[],"fname":"Form\/jxbutton.js"},"jxcombo":{"deps":["field","button","menu","menu.item","set"],"desc":"Represents an editable combo","css":[],"images":[],"fname":"Form\/jxcombo.js"},"password":{"deps":["field"],"desc":"Represents a password input","css":[],"images":[],"fname":"Form\/password.js"},"jxcolor":{"deps":["field","text","button","button.color","validator","form"],"desc":"Represents an input field with a jx.button.color","css":[],"images":[],"fname":"Form\/jxcolor.js"}}